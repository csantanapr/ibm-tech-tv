apiVersion: v1
kind: Service
metadata:
  name: cloud-storage
  labels:
    app: cloud-storage
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app: cloud-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-storage
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/csantanapr/ibm-tech-tv/tree/master/3-microservices/a-cloud-storage
    app.openshift.io/connects-to: watson-vision
  labels:
    app: cloud-storage
    app.kubernetes.io/component: cloud-storage
    app.kubernetes.io/instance: cloud-storage
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: ibm-tech-tv-app
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "14"
    version: v1
spec:
  selector:
    matchLabels:
      app: cloud-storage
      version: v1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: cloud-storage
        version: v1
    spec:
      containers:
        - name: cloud-storage
          image: csantanapr/ibm-tech-tv-storage
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: PORT
              value: "8080"
            - name: CLASSIFY_DEFAULT_URL
              value: http://watson-vision
          envFrom:
            - secretRef:
                name: cos
          resources:
            requests:
              memory: "100Mi"
              cpu: "5m"
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: watson-vision
  labels:
    app: watson-vision
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  selector:
    app: watson-vision
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watson-vision
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/csantanapr/ibm-tech-tv/tree/master/3-microservices/b-watson-vision
  labels:
    app: watson-vision
    app.kubernetes.io/component: watson-vision
    app.kubernetes.io/instance: watson-vision
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: ibm-tech-tv-app
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "14"
    version: v1
spec:
  selector:
    matchLabels:
      app: watson-vision
      version: v1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: watson-vision
        version: v1
    spec:
      containers:
        - name: watson-vision
          image: csantanapr/ibm-tech-tv-vision
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: PORT
              value: "8080"
          envFrom:
            - secretRef:
                name: watson
          resources:
            requests:
              memory: "100Mi"
              cpu: "5m"
          livenessProbe:
            tcpSocket:
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
